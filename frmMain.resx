<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEACABoBQAAJgAAABAQAAABACAAaAQAAI4FAAAoAAAAEAAAACAAAAABAAgAAAAAAAAB
        AAAAAAAAAAAAAAABAAAAAQAAAAAAACUAAAAxBgAAMgwGADcICABKAAAATQAAAE0ABQBXAAAAUgkKAF0P
        DgBOGwEAWh8BAFsRDQBZHwoAVxIVAGIEAABmAAgAcAobAG4VFAB6FhwAUSQSAF4oGgBCNxoAbD0eAHsd
        IABGPyMAejYmAHY+KABxPTQAd0QKAHtLFABzRB8AekkaAFNPMQBPUzcAWlI8AGBLKQB5RyUAYlszAEJm
        NwB8fTQAS3tDAFt4RwBDclIARHNTAEB/VQByfk0AZX9kAGl9agCEIhMAgBQsAJApLwCLQykAh0ovAIxG
        MwCOTDEAnEAxAJFYMQCbVjgAol4qAKRbPgCMdEQAk31BAK96TACydUgAs39PAD6BVgBCjl4AVodXAFiE
        XQBRmV0AV5teAEyZawBbk2MAXpBqAFOcawBfnWoAcI12AHKTegBHoGwAVqRqAFKobQBbqnMAe65vAGKt
        fAB7on4AYMB/ALGESwCwiEoAs41MALaSRwC7lEkAupZPALWEUAC0klYAu5RUAL2WVADEm0sAwp1ZAMma
        WwDHp1wAxalbAM+0YwDXs2IA1rtmANe7cABWx5EAatWQAF7oogBo97wAZ/y9AG/7ugBp/70Affy5AG/9
        xACArYIAi7GMAIT5tAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
</value>
  </data>
</root>